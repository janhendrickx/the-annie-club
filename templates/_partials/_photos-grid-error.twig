{% set allPics = craft.entries().section('photogallery').one() %}

{# <div class="gallery-wrapper">
    <div class="gallery">
    	{% for photo in photos %}
            {% set width = photo.width %}
            {% set height = photo.height %}
            {% set ratio = (width / height)|round(2) %}
            {% set size = ratio < 1 ? photo.getUrl({ width: 150 }) : photo.getUrl({ width: 200 }) %}
        

			{% set cat = photo.category.one().slug ?? null %}
                <div class="gallery-item" style="padding-bottom: {{ (1 / ratio) * 100 }}%;">
                    <a href={{ photo.url }} data-toggle="lightbox" data-gallery="photo-gallery" data-size="fullscreen">
                        <img src="{{ size }}" alt="{{ photo.title }}">
                    </a>
                </div>
            {% endfor %}
    </div>
</div>	 #}
{# {% set picGroups = entry.picMatrix %} #}

<div class="grids-wrapper">
    {% for block in allPics.picMatrix %}
    {% set widestPhoto = block.picsGroup|sort((a, b) => b.width <=> a.width)|first %}
        {# <div class="grid-wrapper"> #}
            <div class="grid-wrapper" style="width: {{ block.picsGoupWidth + 10 }}px">
            
                {# {% for photo in block.picsGroup %}
                    {% set width = photo.width %}
                    {% set height = photo.height %}
                    {% set ratio = (width / height)|round(2) %}
                    {% set paddingBottom = (height / width) * 100 ~ "%" %} #}
                    {# {% set size = ratio < 1 ? photo.getUrl({ width: 150 }) : photo.getUrl({ width: 200 }) %} #}
                    {# {% set size = ratio < 1 ? photo.getUrl({ height: 200 }) : photo.getUrl({ height: 100 }) %} #}
                    {# de breedte : de breedte van de bovenste foto delen door 2 - 5 (de helft van de gap van 10px)  #}
                    {# {% set size = photo.getUrl({ width: ( (block.picsGoupWidth / 2) ) }) %}
                    {% set sizeClass = ratio < 1 ? "portrait" : "landscape" %}
                    {% set cat = photo.category.one().slug ?? null %} #}

                    {% if widestPhoto %}
                        <a href="{{ widestPhoto.url }}" data-toggle="lightbox" data-gallery="photo-gallery" data-size="fullscreen" class="pic header-item">
                            <img src="{{ widestPhoto.getUrl({ width: block.picsGoupWidth + 10 }) }}" alt="{{ widestPhoto.title }}">
                        </a>
                         {% set otherPhotos = [] %}
                            {% for photo in block.picsGroup %}
                                {# Voeg alle andere foto's toe aan een aparte lijst #}
                                {% if photo != widestPhoto %} {# Vergelijk de objecten #}
                                    {% set otherPhotos = otherPhotos|merge([photo]) %}
                                {% endif %}
                            {% endfor %}
                        {% endif %}

                    {% if otherPhotos is not empty %}
                         {% for photo in otherPhotos %}
                            <div>
                                <a href="{{ photo.url }}" data-toggle="lightbox" data-gallery="photo-gallery" data-size="fullscreen" class="pic column-item">
                                    <img src="{{ size }}" alt="{{ photo.title }}">
                                </a>
                            </div>
                        {% endfor %}
                    {% endif %}
                {# {% endfor %} #}
                        
                    
            </div>
        {# </div> #}
    {% endfor %}
</div>
    {# {% for photo in photos %}
        {% set cat = photo.category.one().slug ?? null %}
        <div class="gallery-item" data-category="{{ cat }}">
            <img src="{{ photo.url }}" alt="{{ photo.title }}">
        </div>
    {% endfor %} #}

<script src="assets/js/bootstrap.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="assets/js/isotope.pkgd.js"></script>
<script src="assets/js/masonryhorizontal.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bs5-lightbox@1.8.5/dist/index.bundle.min.js"></script>
<script>
{% for block in allPics.picMatrix %}
    {# $(".grid-wrapper-").isotope({
    layoutMode: 'masonryHorizontal',
    itemSeletor: '.grid-container-{{ block.id }}',
    masonryHorizontal: {
        rowHeight: 50,
        gutter: 20
    }
    }); #}
{% endfor %}
</script>